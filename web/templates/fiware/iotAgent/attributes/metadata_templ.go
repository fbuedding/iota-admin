// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.639
package attributes

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/fbuedding/fiware-iot-agent-sdk"

func Metdata(mm map[string]iotagentsdk.Metadata) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"overflow-x-auto\"><table class=\"table\"><!-- head --><thead><tr><th>Name </th><th>Type </th><th>Value </th></tr></thead> ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for n, m := range mm {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tbody><!-- row 1 --><tr><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(n)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/fiware/iotAgent/attributes/metadata.templ`, Line: 20, Col: 13}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(m.Type)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/fiware/iotAgent/attributes/metadata.templ`, Line: 21, Col: 18}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(m.Value)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/fiware/iotAgent/attributes/metadata.templ`, Line: 22, Col: 19}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td></tr></tbody>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</table></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func MetdataInput(kind string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<metadata-input kind=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var6 string
		templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(kind)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `web/templates/fiware/iotAgent/attributes/metadata.templ`, Line: 31, Col: 28}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></metadata-input>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func MetadataTemplate() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var7 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var7 == nil {
			templ_7745c5c3_Var7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<template id=\"metadata-container-template\"><div class=\"pl-5 pt-5\"><div>Metadata:</div><div id=\"metadata\" class=\"pb-5\"></div><input id=\"add-metadata-btn\" type=\"button\" value=\"Add\" class=\"btn\"> <input id=\"remove-metadata-btn\" type=\"button\" value=\"Remove\" class=\"btn\" disabled></div></template><template id=\"metadata-template\"><div class=\"join pt-5 w-full\"><input class=\"input input-bordered join-item w-full\" id=\"name-input\" placeholder=\"Name\" required> <input id=\"type-input\" name=\"${id}[${index}].metadata[${count}].type\" class=\"input input-bordered join-item w-full\" placeholder=\"Type\" required> <input id=\"value-input\" name=\"${id}[${index}].metadata[${count}].value\" class=\"input input-bordered join-item w-full\" placeholder=\"Value\" required></div></template>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = MetadataScript().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func MetadataScript() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_MetadataScript_aecd`,
		Function: `function __templ_MetadataScript_aecd(){// Create a class for the element
  class Metadata extends HTMLElement {
    static formAssociated = true;
    static observedAttributes = ["kind", "index"];

    constructor() {
      // Always call super first in constructor
      super();
      this.internals_ = this.attachInternals();
      this.state =  {
        count:0
      }
    }

    connectedCallback() {
      let template = document.getElementById("metadata-container-template");
      this.appendChild(template.content.cloneNode(true));

      this.metadataTemplate = document.getElementById("metadata-template");

      if(!(this.hasAttribute("kind"))){
        throw("Missing Attribute 'kind'")
      }
      this.addMetadataBtn = this.querySelector("#add-metadata-btn");
      this.addMetadataBtn.onclick = () =>{ this.addMetadata() };

      this.removeMetadataBtn = this.querySelector("#remove-metadata-btn");
      this.removeMetadataBtn.onclick = () => { this.removeMetdata() };

      this.metadata = this.querySelector("#metadata");

      this.kind = this.getAttribute("kind");
      
    }

    disconnectedCallback() {}

    adoptedCallback() {}

    attributeChangedCallback(name, oldValue, newValue) {}

    onNameChange(event, typeInput, valueInput, count){
      const value = event.target.value;

      typeInput.name =` + "`" + `${this.kind}[${count}].metadata[${value}].type` + "`" + `; 
      valueInput.name =` + "`" + `${this.kind}[${ count }].metadata[${value}].value` + "`" + `; 
    }

    addMetadata(){
      const el = this.metadataTemplate.content.cloneNode(true).firstElementChild;
      el.innerHTML = el.innerHTML.replaceAll("%index", this.state.count);
      const nameInput = el.querySelector("#name-input");
      const count = this.state.count;
      nameInput.onchange = (event) => { this.onNameChange(event, el.querySelector("#type-input"), el.querySelector("#value-input"), count) };

      this.metadata.appendChild(el);
      el.scrollIntoView({behavior: "smooth",block:"center"});
      this.state.count++;
      this.removeMetadataBtn.disabled = this.state.count < 1;
    }

    removeMetdata(){
      this.metadata.removeChild(this.metadata.lastChild);
      this.state.count--;
      this.removeMetadataBtn.disabled = this.state.count < 1;
    }

  }

  customElements.define("metadata-input", Metadata);

}`,
		Call:       templ.SafeScript(`__templ_MetadataScript_aecd`),
		CallInline: templ.SafeScriptInline(`__templ_MetadataScript_aecd`),
	}
}
